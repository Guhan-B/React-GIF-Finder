{"version":3,"sources":["components/GifGrid/GifGrid.module.css","components/Logo/Logo.module.css","components/Layout/Layout.module.css","components/SearchBar/SearchBar.module.css","components/GifGrid/GifGridItem/GifGridItem.module.css","components/Spinner/Spinner.module.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navbar/Navbar.js","components/Layout/Layout.js","components/SearchBar/SearchBar.js","components/GifGrid/GifGridItem/GifGridItem.js","components/Spinner/Spinner.js","components/GifGrid/GifGrid.js","container/GifContainer/GifContainer.js","container/App.js","index.js","components/Navbar/Navbar.module.css"],"names":["module","exports","Aux","props","children","Logo","className","classes","logo","Navbar","navbar","container","Layout","SearchBar","state","currentSearchQuery","search","searchChangeHandler","event","setState","target","value","searchBar","onSubmit","preventDefault","callback","type","placeholder","onChange","this","React","Component","GifGridItem","gifGridItem","src","url","alt","id","Spinner","spinner","GifGrid","gifGridItems","style","loading","gifs","gifGrid","map","el","gifUrl","GifContainer","searchQuery","loadedGifs","searchHandler","updatedSearchQuery","prevProp","prevState","Axios","get","then","res","updatedGif","data","results","media","gif","gifPreviewUrl","preview","catch","err","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6a6aed5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gifGrid\":\"GifGrid_gifGrid__3sNcX\",\"loading\":\"GifGrid_loading__3ZUZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__Gqnzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__q7gL9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__G06EF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gifGridItem\":\"GifGridItem_gifGridItem__3RZor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__uPCw3\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\n\r\nimport classes from './Logo.module.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className={classes.logo}>\r\n            <h1>Gif.It</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <header className={classes.navbar}>\r\n            <div className={classes.container}>\r\n                <Logo/>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Aux>\r\n            <Navbar/>\r\n            <main className={classes.container}>\r\n                {props.children}\r\n            </main>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nimport classes from './SearchBar.module.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    \r\n    state = {\r\n        currentSearchQuery: this.props.search\r\n    }\r\n\r\n    searchChangeHandler = (event) => {\r\n        this.setState({\r\n            currentSearchQuery: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.searchBar}>\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.props.callback(this.state.currentSearchQuery);\r\n                }}>\r\n                    <input type=\"text\" placeholder=\"Search a GIF\" onChange={this.searchChangeHandler} value={this.state.currentSearchQuery} />\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport classes from './GifGridItem.module.css';\r\n\r\nconst GifGridItem = (props) => {\r\n    return (\r\n        <div className={classes.gifGridItem}>\r\n            <img src={props.url} alt={props.id}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={classes.spinner}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport GifGridItem from './GifGridItem/GifGridItem';\r\nimport classes from './GifGrid.module.css';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nconst GifGrid = (props) => {\r\n\r\n    let gifGridItems = <Spinner/>;\r\n    let style = classes.loading;\r\n\r\n    if (props.gifs) {\r\n        style = classes.gifGrid;\r\n        gifGridItems = props.gifs.map((el) => {\r\n            return <GifGridItem key={el.id} id={el.id} url={el.gifUrl} />;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={style}>\r\n            { gifGridItems}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGrid;","import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport GifGrid from '../../components/GifGrid/GifGrid';\r\nimport Aux from '../../hoc/Auxiliary';\r\n\r\nclass GifContainer extends React.Component {\r\n    state = {\r\n        searchQuery: '',\r\n        loadedGifs: null,\r\n    }\r\n\r\n    searchHandler = (updatedSearchQuery) => {\r\n        this.setState({\r\n            searchQuery: updatedSearchQuery\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery && this.state.searchQuery) {\r\n            Axios.get('https://api.tenor.com/v1/search?key=DWOMV8H8CC5W&media_filter=minimal&q=' + this.state.searchQuery)\r\n                .then(res => {\r\n                    const resGif = res.data.results;\r\n                    const updatedGif = resGif.map((el) => {\r\n                        return {\r\n                            id: el.id,\r\n                            gifUrl: el.media[0].gif.url,\r\n                            gifPreviewUrl: el.media[0].gif.preview,\r\n                        }\r\n                    })\r\n                    this.setState({\r\n                        loadedGifs: updatedGif\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n\r\n            this.setState({\r\n                loadedGifs: null\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('https://api.tenor.com/v1/trending?key=DWOMV8H8CC5W&media_filter=minimal')\r\n            .then(res => {\r\n                const resGif = res.data.results;\r\n                const updatedGif = resGif.map((el) => {\r\n                    return {\r\n                        id: el.id,\r\n                        gifUrl: el.media[0].gif.url,\r\n                        gifPreviewUrl: el.media[0].gif.preview,\r\n                    }\r\n                })\r\n                this.setState({\r\n                    loadedGifs: updatedGif\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <SearchBar search={this.state.searchQuery} callback={this.searchHandler} />\r\n                <GifGrid gifs={this.state.loadedGifs} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GifContainer;","import React, { Component } from 'react';\n\nimport Layout from '../components/Layout/Layout';\n\nimport GifContainer from './GifContainer/GifContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <GifContainer />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3vqaP\",\"container\":\"Navbar_container__kJ521\"};"],"sourceRoot":""}